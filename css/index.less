@import "reset.less";

//@import (reference)"common.less";//只引入，不编译
/*
引入插件 prfixfree.min.js 导入插件后，会自动生成前缀
*/
html {
    font-size: 100px;
    /*640px设计稿尺寸中，1rem=100px*/
}

html,
body {
    height     : 100%;
    overflow   : hidden;
    background : #f4f4f4;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

.mainBox {
    width     : 6.4rem;
    height    : 100%;
    margin    : 0 auto;
    background: #fff;
}

.loadingBox,
.phoneBox,
.messageBox,
.cubeBox,
.detailBox {
    display : none;
    position: relative;
    height  : 100%;
    overflow: hidden;
}

.loadingBox {
    background: #000;

    .title {
        width     : 100%;
        height    : 1.4rem;
        position  : absolute;
        left      : 0;
        top       : 50%;
        margin-top: -2.2rem;
        color     : #fff;

        // (正中间-.7rem,然后再向上偏移150px)
        h1 {
            line-height: .75rem;
            font-size  : .5rem;
            text-align : center;
        }

        h2 {
            margin-top    : .2rem;
            line-height   : .45rem;
            text-align    : center;
            letter-spacing: .04rem;
        }
    }

    .progress {
        position  : absolute;
        top       : 50%;
        left      : 50%;
        margin    : -.15rem 0 0 -2.3rem;
        width     : 4.6rem;
        height    : .3rem;
        background: #fff;

        // overflow: hidden;
        .currentProgress {
            position       : absolute;
            top            : 0;
            left           : 0;
            width          : 0%;
            height         : 100%;
            background     : -webkit-linear-gradient(left bottom, #5cb8fc 0, #5cb8fc 25%, #74c274 25%, #74c274 50%, #5cb8fc 50%, #5cb8fc 75%, #74c274 75%, #74c274 100%) repeat;
            background     : linear-gradient(left bottom, #5cb8fc 0, #5cb8fc 25%, #74c274 25%, #74c274 50%, #5cb8fc 50%, #5cb8fc 75%, #74c274 75%, #74c274 100%) repeat;
            background-size: .3rem, .3rem;
            animation      : loadingMove 2s linear 0s infinite both;
            // 设置一个过渡动画，当我们在JS中控制它的宽度变化的时候，给其一个平稳的过渡效果（而不是生硬的改变）
            transition: all .6s linear 0s;
        }

    }
}

@keyframes loadingMove {
    0% {
        background-position: 0 0;
    }

    100% {
        background-position: 0 -.3rem;
    }
}

// 虽然移动端（安卓和IOS）上的浏览器大部分都是webkit内核的，但是由于很多手机操作系统版本过低，
//尤其是安卓手机，导致很多css3新特性不能有效识别，此时我们使用的大部分css属性都要写两套才能兼容，
//例如-webkit-animation , animation （加前缀的在前，不加的在后）

.phoneBox {
    background     : url('../img/zf_phoneBg.jpg') no-repeat;
    background-size: cover;

    h2 {
        margin-top: .5rem;
        text-align: center;

        img {
            display: inline-block;
            width  : 2.62rem;
            height : 1.25rem;
        }

        span {
            display       : none;
            margin-top    : .1rem;
            line-height   : .3rem;
            font-size     : .3rem;
            color         : #FFF;
            letter-spacing: .05rem;
        }
    }

    .answer {
        position       : absolute;
        width          : 5.2rem;
        height         : 3.6rem;
        left           : 50%;
        margin-left    : -2.6rem;
        bottom         : .3rem;
        background     : url('../img/zf_phoneListen.png') no-repeat;
        background-size: 100% 100%;

        .markMove {
            position     : absolute;
            right        : -.06rem;
            bottom       : .48rem;
            z-index      : -1;
            box-sizing   : border-box;
            width        : 1.6rem;
            height       : 1.6rem;
            border-radius: 50%;
            border       : .03rem solid #0f0;
            // animation : answerMove 1s linear 0s infinite both;
        }

        .markLink {
            .markMove; // 把mark的样式继承过来使用
            background: red;
            z-index   : 1;
            border    : none;
            animation : none;
            opacity   : 0;
        }

    }

    .hangUp {
        position       : absolute;
        left           : 50%;
        margin-left    : -2.6rem;
        bottom         : .3rem;
        width          : 5.2rem;
        height         : 6.59rem;
        background     : url('../img/zf_phoneDetail.png');
        background-size: 100% 100%;

        // 初始位置是在phone的底部，看不见，溢出内容隐藏了，当点击接听按钮的时候，控制它从底下出来即可，js中改变样式
        // 我们可以基于transform改变样式的尽量不要使用传统的样式属性，因为transform开启了浏览器的硬件加速，性能更高一些
        transform : translateY(6.89rem);
        transition: .9s;

        .markLink {
            position   : absolute;
            left       : 50%;
            margin-left: -.8rem;
            bottom     : .25rem;
            width      : 1.6rem;
            height     : 1.6rem;
            z-index    : 1;
        }
    }
}

@keyframes answerMove {
    from {
        transform: scale(1.2);
        z-index  : 1;
    }

    to {
        transform: scale(.8);
        z-index  : -1;
    }
}

.messageBox {
    // display:block;
    background: #EAEAEA;

    .wrapper {
        position  : absolute;
        top       : .2rem;
        left      : 0;
        width     : 100%;
        transition: .3s;

        li {

            position     : relative;
            list-style   : none;
            max-width    : 3.6rem;
            padding      : .25rem;
            margin-bottom: .4rem;
            border-radius: .1rem;
            font-size    : .26rem;
            line-height  : .4rem;
            opacity      : 0;

            &.active {
                animation: messageListMove .3s linear both;
            }

            .pic {
                position     : absolute;
                top          : 0;
                width        : 0.82rem;
                height       : 0.82rem;
                border-radius: 50%;
            }

            .arrow {
                position: absolute;
                top     : .2rem;
                width   : 0.1rem;
                height  : 0.2rem;
            }

            &.self {
                float      : left;
                background : #fff;
                border     : .02rem solid #cacaca;
                margin-left: 1.25rem;

                .pic {
                    left: -1rem;
                }

                .arrow {
                    left           : -.1rem;
                    background     : url(../img/zf_messageArrow1.png) no-repeat;
                    background-size: cover;
                }
            }

            &.inter {
                float       : right;
                background  : #a2e45c;
                border      : .02rem solid #96b474;
                margin-right: 1.25rem;

                .pic {
                    right: -1rem;
                }

                .arrow {
                    right          : -.1rem;
                    background     : url(../img/zf_messageArrow2.png) no-repeat;
                    background-size: cover;
                }
            }

        }
    }

    .keyboard {
        position       : absolute;
        left           : 0;
        bottom         : -.5rem;
        width          : 100%;
        height         : 5.16rem;
        box-sizing     : border-box;
        background     : url(../img/zf_messageKeyboard.png) no-repeat;
        background-size: 100% 100%;
        // 初始位置
        transform : translateY(3.7rem);
        transition: .3s;

        span {
            position   : absolute;
            left       : .9rem;
            top        : .35rem;
            width      : 4rem;
            height     : 0.4rem;
            line-height: .4rem;
            font-size  : .25rem;
        }

        .submit {
            display        : none;
            position       : absolute;
            right          : .1rem;
            bottom         : .6rem;
            width          : 1.47rem;
            height         : 0.74rem;
            background     : url(../img/zf_messageChat.png) no-repeat;
            background-size: 100% 100%;
        }
    }
}

@keyframes messageListMove {
    from {
        transform: translateY(1rem);
        opacity  : 0;
    }

    to {
        transform: translateY(0);
        opacity  : 1;
    }
}

/*CUBE*/
.cubeBox {
    background     : url("../img/zf_cubeBg.jpg") no-repeat;
    background-size: cover;

    .cube {
        position: absolute;
        top     : 50%;
        left    : 50%;
        margin  : -2.55rem 0 0 -2.55rem;
        width   : 5.1rem;
        height  : 5.1rem;

        li {
            position: absolute;
            top     : 0;
            left    : 0;
            width   : 100%;
            height  : 100%;

            img {
                display: block;
                width  : 100%;
                height : 100%;
            }
        }
    }

    .tip {
        position   : absolute;
        bottom     : .5rem;
        left       : 50%;
        margin-left: -1.97rem;
        width      : 3.94rem;
        height     : .44rem;
    }
}

//=>在二维平面中实现3D效果
.cubeBox {
    //1.给需要实现3D变形元素所在的舞台设置“视距”(1000~2000)
    perspective: 2000px;

    .cube {
        //2.给需要操作的元素设置3D变形效果
        transform-style: preserve-3d;

        //3.基于TRASFORM实现3D变形
        li {
            &:nth-child(1) {
                transform: translateZ(2.55rem);
            }

            &:nth-child(2) {
                transform: translateZ(-2.55rem) rotateY(180deg);
            }

            &:nth-child(3) {
                transform: translateX(2.55rem) rotateY(90deg);
            }

            &:nth-child(4) {
                transform: translateX(-2.55rem) rotateY(-90deg);
            }

            &:nth-child(5) {
                transform: translateY(-2.55rem) rotateX(90deg);
            }

            &:nth-child(6) {
                transform: translateY(2.55rem) rotateX(-90deg);
            }
        }

        //4.给魔方一个初始的旋转角度，让其可以看到3D的效果（旋转后太大了，把魔方缩小一点）
        transform : scale(0.6) rotateX(-35deg) rotateY(35deg);
        transition: .8s; //=>后期让魔方旋转的时候有一个平稳的过渡动画效果
    }
}

/*detail*/
.detailBox {
    .swiper-container {
        height  : 100%;
        overflow: hidden;

        .swiper-slide {
            position: relative; //每一个页面中的子元素相对于自己的页面定位
            width   : 100%;
            height  : 100%;
            overflow: hidden;

            &:nth-of-type(2) {
                background: #fff9c1;

            }

            &:nth-of-type(3) {
                background: #E45454;
            }

            &:nth-of-type(4) {
                background: #fac471;
            }

            &:nth-of-type(5) {
                background: #FBFFE8;
            }

            &:nth-of-type(6) {
                background: #5975FF;
            }
        }
    }

    // page1
    .page1 {
        dl {
            position: absolute;
            top     : 50%;
            left    : 50%;
            margin  : -3.6rem 0 0 -2.7rem;
            width   : 5.4rem;
            height  : 7.2rem;
        }

        dt,
        dd {
            box-sizing : border-box;
            height     : .6rem;
            line-height: .6rem;
            background : #8fbb4c;
        }

        dt {
            text-align: center;
            font-size : .4rem;
            color     : yellow;
        }

        dd {
            position  : relative;
            border-top: .02rem dashed rgba(255, 255, 255, .3);

            em {
                position       : absolute;
                left           : .15rem;
                top            : 50%;
                margin-top     : -.21rem;
                width          : 0.36rem;
                height         : 0.42rem;
                line-height    : .42rem;
                text-align     : center;
                font-style     : normal;
                font-size      : .2rem;
                color          : #fff;
                background     : url(../img/zf_outline.png) no-repeat;
                background-size: contain;
            }

            a {
                position     : relative;
                display      : block;
                margin-left  : .66rem;
                font-size    : .28rem;
                color        : #000;
                text-overflow: ellipsis;
                white-space  : nowrap;
                overflow     : hidden;
            }

            em,
            a {
                z-index: 1000;
                //基于makisu实现3d折叠，为了保证内容不被折叠创建的span遮住，我们需要把内容的层级提高
            }

        }
    }

    .page2 {
        h2 {
            height     : .9rem;
            line-height: .9rem;
            text-align : center;
            margin-top : .8rem;
            font-size  : .6rem;
            font-weight: normal;
            opacity    : 0;
        }

        img {
            position  : absolute;
            top       : 50%;
            left      : 50%;
            width     : 1rem;
            height    : 1rem;
            margin    : -.5rem 0 0 -.5rem;
            opacity   : 0;
            transition: .5s; // 从中心到四周的动画，可以基于transition来完成

            &:nth-last-of-type(1) {
                width : 1.32rem;
                height: 1.7rem;
                margin: -.85rem 0 0 -.66rem;
            }
        }

    }

    #page2 {
        h2 {
            animation: bounceInLeft 1s 1 both;
        }

        img {

            &:nth-last-of-type(1) {
                animation: shake 1s both;
            }

            &:not(:nth-last-of-type(1)) {
                opacity  : 1;
                animation: tada 1s .5s infinite both;
            }

            &:nth-of-type(1) {
                margin-top: -2.9rem; // -.5-2.4
            }

            &:nth-of-type(2) {
                margin-top : -1.7rem;
                margin-left: 1.5rem;
            }

            &:nth-of-type(3) {
                margin-top : .7rem;
                margin-left: 1.5rem;
            }

            &:nth-of-type(4) {
                margin-top: 1.9rem;
            }

            &:nth-of-type(5) {
                margin-top : .7rem;
                margin-left: -2.5rem;
            }

            &:nth-of-type(6) {
                margin-top : -1.7rem;
                margin-left: -2.5rem;
            }
        }

        @keyframes bounceInLeft {

            from,
            60%,
            75%,
            90%,
            to {
                -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
                animation-timing-function        : cubic-bezier(0.215, 0.61, 0.355, 1);
            }

            0% {
                opacity          : 0;
                -webkit-transform: translate3d(-3000px, 0, 0);
                transform        : translate3d(-3000px, 0, 0);
            }

            60% {

                -webkit-transform: translate3d(25px, 0, 0);
                transform        : translate3d(25px, 0, 0);
            }

            75% {
                -webkit-transform: translate3d(-10px, 0, 0);
                transform        : translate3d(-10px, 0, 0);
            }

            90% {
                -webkit-transform: translate3d(5px, 0, 0);
                transform        : translate3d(5px, 0, 0);
            }

            to {
                opacity          : 1;
                -webkit-transform: translate3d(0, 0, 0);
                transform        : translate3d(0, 0, 0);
            }
        }

        @keyframes shake {

            from,
            to {
                -webkit-transform: translate3d(0, 0, 0);
                transform        : translate3d(0, 0, 0);
            }

            0% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }

            10%,
            30%,
            50%,
            70%,
            90% {
                -webkit-transform: translate3d(-10px, 0, 0);
                transform        : translate3d(-10px, 0, 0);
            }

            20%,
            40%,
            60%,
            80% {
                -webkit-transform: translate3d(10px, 0, 0);
                transform        : translate3d(10px, 0, 0);
            }
        }

        @keyframes tada {
            from {
                -webkit-transform: scale3d(1, 1, 1);
                transform        : scale3d(1, 1, 1);
            }

            10%,
            20% {
                -webkit-transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);
                transform        : scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);
            }

            30%,
            50%,
            70%,
            90% {
                -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
                transform        : scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
            }

            40%,
            60%,
            80% {
                -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
                transform        : scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
            }

            to {
                -webkit-transform: scale3d(1, 1, 1);
                transform        : scale3d(1, 1, 1);
            }
        }

    }

    /**
        基于swiper实现切换到哪一个页卡，让哪个页卡中的后代元素有动画效果
        1，除了编写正常的css样式（都写在 .page-x中），把需要实现动画的元素所对应的动画卸载#page-x中（ID选择器优先级高）
        2，在swiper插件的某些回调函数中. onTransitionEnd.. 获取当前展示的slide的索引，根据索引为其设置对应的id值，当前展示的slide有id,其余的没有id
        3, 为了保证切换到这一页面的时候，元素是运动过来的（开始时啥都开不见），元素都是基于动画显示的（在初始样式中，把所有需要运动的元素，透明度设置为0,加id之后执行动画效果，在动画的最后一帧让透明度为1）
    */

    // teacher
    .page3 {
        &>a {
            position  : absolute;
            display   : block;
            top       : .1rem;
            right     : .1rem;
            background: url(../img/zf_return.png) no-repeat;
        }

        h2 {
            position: relative;
            width   : 3.82rem;
            height  : 1.41rem;

            margin: .5rem auto;

            line-height: .7rem;
            font-size  : .6rem;
            color      : #fff;
            font-weight: bolder;

            span {
                display : inline-block;
                position: absolute;

                &:nth-of-type(1) {
                    top : 0;
                    left: 0;
                }

                &:nth-of-type(2) {
                    bottom: 0;
                    right : 0;
                }

            }

        }

        .teacherBox {
            position   : absolute;
            width      : 5.7rem;
            margin-top : 2.5rem;
            left       : 50%;
            margin-left: -2.85rem;
            clear      : both;

            // background:yellow;
            .teacher {
                width    : 32%;
                height   : 3rem;
                margin   : .2rem 0;
                color    : #fff;
                font-size: .24rem;

                &:nth-of-type(2),
                &:nth-of-type(5) {
                    margin-left : 2%;
                    margin-right: 2%;
                }

                float: left;

                img {
                    display      : block;
                    width        : 1.2rem;
                    height       : 1.2rem;
                    border-radius: 50%;
                    margin       : 0 auto;
                }

                span {
                    display    : block;
                    width      : 100%;
                    height     : 0.5rem;
                    line-height: .5rem;
                    text-align : center;
                }

                div {
                    line-height: .32rem;
                }

            }
        }
    }

    .page4 {
        a {
            position       : absolute;
            display        : block;
            top            : .1rem;
            right          : .1rem;
            width          : 0.5rem;
            height         : 0.5rem;
            background     : url(../img/zf_return.png) no-repeat;
            background-size: cover;
        }

        p {
            position   : absolute;
            line-height: .6rem;
            font-size  : .35rem;
            left       : .64rem;

            &:nth-of-type(1) {
                width: 4.5rem;
                top  : .57rem;
            }

            &:nth-of-type(2) {
                width: 5.5rem;
                top  : 2.2rem;
            }

            span {
                font-size  : .5rem;
                color      : #fff;
                margin-left: .1rem;
            }
        }

        h2 {
            position  : absolute;
            top       : 3.8rem;
            text-align: center;
            width     : 100%;
            height    : .75rem;
            font-size : .5rem;
            color     : yellow;

        }

        div {
            position        : absolute;
            top             : 5rem;
            left            : 50%;
            transform       : translateX(-2.4rem);
            width           : 4.8rem;
            height          : 3.8rem;
            padding         : .15rem;
            background-color: rgb(250, 240, 195);
        }
    }

    .page5 {
        a {
            position       : absolute;
            display        : block;
            top            : .1rem;
            right          : .1rem;
            width          : 0.5rem;
            height         : 0.5rem;
            background     : url(../img/zf_return.png) no-repeat;
            background-size: cover;
        }

        .textArea {
            position     : absolute;
            width        : 100%;
            height       : 1.4rem;
            bottom: .5rem;

            span {
                &:nth-of-type(1) {
                    position: absolute;
                    width   : 3.76rem;
                    height  : 0.82rem;
                    font-size: .6rem;
                    top     : 0;
                    left    : 1rem;
                }

                &:nth-of-type(2) {
                    position: absolute;
                    width   : 3.22rem;
                    height  : 0.38rem;
                    font-size: .3rem;
                    right   : 1rem;
                    bottom  : 0;
                }
            }
        }

        .imagesArea {
            img {
                width : 5rem;
                height: 3.3rem;
                border: .07rem solid #fff;
                position: absolute;
                &:nth-of-type(1){
                    top: 8%;
                    left: 13%;
                    transform:rotate(9deg);
                }
                &:nth-of-type(2){
                    top: 25%;
                    left: 10%;
                    transform: rotate(-9deg);
                }
                &:nth-of-type(3){
                    top: 44%;
                    left: 17%;
                    transform: rotate(9deg);
                }
            }


        }
    }

    .page6{
        a {
            position       : absolute;
            display        : block;
            top            : .1rem;
            right          : .1rem;
            width          : 0.5rem;
            height         : 0.5rem;
            background     : url(../img/zf_return.png) no-repeat;
            background-size: cover;
        }
        .title{
            width: 5rem;
            height: 1rem;
            padding:.3rem 0;
            margin:0 auto;
            border-bottom:.02rem solid rgba(255, 255, 255, .5);
            color:#fff;
            p{
                &:nth-of-type(1){
                    line-height: .64rem;
                    font-size: .44rem;
                }
                &:nth-of-type(2){
                    line-height: .35rem;
                    font-size: .24rem;
                }
            }
        }
        .contentArea{
            width: 5rem;
            margin:.4rem auto 0 auto;
           .content{
               width: 100%;
               height: 1.6rem;
               padding-bottom:.4rem;
               position: relative;
               div{
                   &:nth-of-type(1){
                        position: absolute;
                        top: .31rem;
                        left: 0;
                        
                        width: 0.98rem;
                        height: 0.98rem;
                        img{
                            width: 100%;
                            height: 100%;
                        }
                   }
                   &:nth-of-type(2){
                      position: absolute;
                      top: 0;
                      right: 0;
                       width: 3.18rem;
                       height: 1.2rem;
                       padding:.2rem;
                       background:rgba(255,255,255,.9);
                       color:rgb(35,163,211);
                       font-size: .24rem;
                       span{
                           display: inline-block;
                           min-width: .8rem;
                           font-size: .28rem;
                       }
                   }
               }
           }
        }
        .map{
            width: 5rem;
            height: 3.6rem;
            margin:0 auto;
            img{
                width: 100%;
            }
        }

    }
}